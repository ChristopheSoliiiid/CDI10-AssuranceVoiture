//
// This file was generated by the JPA Modeler
//
package Entity;

import java.io.Serializable;

/**
 * @author Users
 */
public class AssurancePK implements Serializable {

    private Long id;

    private Long voiture;

    private Long utilisateur;

    public AssurancePK() {
    }

    public AssurancePK(Long id, Long voiture, Long utilisateur) {
        this.id = id;
        this.voiture = voiture;
        this.utilisateur = utilisateur;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getVoiture() {
        return this.voiture;
    }

    public void setVoiture(Long voiture) {
        this.voiture = voiture;
    }

    public Long getUtilisateur() {
        return this.utilisateur;
    }

    public void setUtilisateur(Long utilisateur) {
        this.utilisateur = utilisateur;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!java.util.Objects.equals(getClass(), obj.getClass())) {
            return false;
        }
        final AssurancePK other = (AssurancePK) obj;
        if (!java.util.Objects.equals(this.getId(), other.getId())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getVoiture(), other.getVoiture())) {
            return false;
        }
        if (!java.util.Objects.equals(this.getUtilisateur(), other.getUtilisateur())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 97 * hash + (this.getId() != null ? this.getId().hashCode() : 0);
        hash = 97 * hash + (this.getVoiture() != null ? this.getVoiture().hashCode() : 0);
        hash = 97 * hash + (this.getUtilisateur() != null ? this.getUtilisateur().hashCode() : 0);
        return hash;
    }

    @Override
    public String toString() {
        return "AssurancePK{" + " id=" + id + ", voiture=" + voiture + ", utilisateur=" + utilisateur + '}';
    }

}
